$date
  Sat Feb 10 18:07:40 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module full_adder_tb $end
$var reg 1 ! a $end
$var reg 1 " b $end
$var reg 1 # cin $end
$var reg 1 $ s $end
$var reg 1 % c $end
$scope module full_adder1 $end
$var reg 1 & x $end
$var reg 1 ' y $end
$var reg 1 ( cin $end
$var reg 1 ) sout $end
$var reg 1 * cout $end
$var reg 1 + t1 $end
$var reg 1 , t2 $end
$var reg 1 - t3 $end
$scope module component1 $end
$var reg 1 . a $end
$var reg 1 / b $end
$var reg 1 0 s $end
$var reg 1 1 c $end
$upscope $end
$scope module component2 $end
$var reg 1 2 a $end
$var reg 1 3 b $end
$var reg 1 4 s $end
$var reg 1 5 c $end
$upscope $end
$scope module component3 $end
$var reg 1 6 bit1 $end
$var reg 1 7 bit2 $end
$var reg 1 8 result $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
U!
U"
U#
U$
U%
U&
U'
U(
U)
U*
U+
U,
U-
U.
U/
U0
U1
U2
U3
U4
U5
U6
U7
U8
#500000000000000
1!
1"
1#
1$
1%
1&
1'
1(
1)
1*
0+
1,
0-
1.
1/
00
11
02
13
14
05
06
17
18
#1000000000000000
0!
0#
1$
0%
0&
0(
1)
0*
1+
0,
0-
0.
10
01
12
03
14
05
06
07
08
#1500000000000000
